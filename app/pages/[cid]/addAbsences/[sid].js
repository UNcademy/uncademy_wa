import React, {useState} from 'react'
import Head from "next/head";
import {useRouter} from "next/router";
import {client} from "../../../graphql/apolloClient";
import {addAbsences} from "../../../graphql/mutations";

async function doMutation(cid, sid, abs, mAbs) {
    const {data} = await client.mutate({
        mutation: addAbsences,
        variables: {
            classId: cid,
            studentId: sid,
            absences: abs,
            maxAbs: mAbs
        }
    });
    return data.addAbsences.message;
}

export default function AddAbsences() {

    const {cid, sid} = useRouter().query

    const [inputs, setInputs] = useState({
        absences: 0,
        maxAbsences: 10
    })

    const changeForm = e => {
        setInputs({
            ...inputs,
            [e.target.name]: e.target.value
        })
    };

    const sendData = e => {
        e.preventDefault()
        doMutation(cid, sid, inputs.absences, inputs.maxAbsences).then(() =>
            window.location.href=`/classList/${cid}`)
    }

    return (
        <>
            <Head>
                <title>UNcademy</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/6-removebg-preview.png" />
            </Head>
            <main className="w-5/6 mt-5 bg-white bg-opacity-100 mx-auto sticky py-2 px-4 lg:px-8 lg:py-4 rounded-lg">
                <div className="p-4 bg-ac rounded-lg border border-black shadow-md my-3 flex justify-center">
                    <h5 className="text-xl font-bold tracking-tight text-gray-900 mx-auto">Agregar fallas del estudiante {sid}</h5>
                </div>
                <form
                    className="text-center"
                    onChange={changeForm}
                    onSubmit={sendData}
                >
                    <label htmlFor="maxAbsences" className="text-lg text-blue">Máximo de fallas permitidas:</label>
                    <input
                        id="maxAbsences"
                        name="maxAbsences"
                        className="mx-auto my-3 w-60 bg-white border border-black text-black text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                        value={inputs.maxAbsences}
                        placeholder="máximo de fallas"
                    />
                    <label htmlFor="absences" className="text-lg text-blue">Número de fallas que tuvo estudiante:</label>
                    <input
                        id="absences"
                        name="absences"
                        className="mx-auto mt-3 mb-5 w-60 bg-white border border-black text-black text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                        value={inputs.absences}
                        placeholder="número de fallas"
                    />
                    <button className="mx-auto bg-m hover:bg-blue-700 text-white font-bold py-2 px-2 rounded flex">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={2} stroke="currentColor" className="w-6 h-6 mr-2">
                            <path strokeLinecap="round" strokeLinejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>

                        Guardar cambios
                    </button>
                </form>
            </main>
        </>
    )
}